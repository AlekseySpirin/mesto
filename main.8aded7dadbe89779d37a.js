(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function r(e,t,r){return(t=n(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(t){var r=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===e(r)?r:String(r)}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_showInputError",(function(e,t){var r=o._formElement.querySelector(".form__item-error_el_".concat(e.name));e.classList.add(o._inputErrorClass),r.textContent=t,r.classList.add(o._errorClass)})),r(this,"_hideInputError",(function(e){var t=o._formElement.querySelector(".form__item-error_el_".concat(e.name));e.classList.remove(o._inputErrorClass),t.classList.remove(o._errorClass),t.textContent=""})),r(this,"_checkInputValidity",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),r(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),r(this,"_toggleButtonState",(function(){o._hasInvalidInput(o._inputList)?o.disableSubmitButton():(o._buttonElement.classList.remove(o._inactiveButton),o._buttonElement.removeAttribute("disabled"))})),r(this,"_setEventListeners",(function(){o._inputList=Array.from(o._formElement.querySelectorAll(o._inputSelector)),o._buttonElement=o._formElement.querySelector(o._submitButtonSelector),o._toggleButtonState(),o._inputList.forEach((function(e){e.addEventListener("input",(function(t){t.preventDefault(),o._checkInputValidity(e),o._toggleButtonState()}))}))})),r(this,"disableSubmitButton",(function(){o._buttonElement.classList.add(o._inactiveButton),o._buttonElement.setAttribute("disabled","disabled")})),r(this,"enableValidation",(function(){o._setEventListeners()})),this.config=t,this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButton=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var n,o;return n=e,(o=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&t(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),e}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==i(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===i(o)?o:String(o)),n)}var o}var u=function(){function e(t,r,n,o,i,a){var u=o.handleCardClick,c=i.handleRemoveButtonClick,l=a.handleClickLikes;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._cardTemplate=n,this._handleCardClick=u,this._likes=t.likes,this._cardId=t.cardId,this._ownerId=t.ownerId,this._userId=r,this._handleRemoveButtonClick=c,this._handleClickLikes=l}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return this._cardTemplate.cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImg=this._element.querySelector(".card__img"),this._cardTitle=this._element.querySelector(".card__title"),this._cardTrash=this._element.querySelector(".card__trash"),this._cardLike=this._element.querySelector(".card__like"),this._likesCounter=this._element.querySelector(".card__like_el_count"),this._likesCounter.textContent=this._likes.length,this._cardTitle.textContent=this._name,this._cardImg.src=this._link,this._cardImg.alt=this._name,this._updateInfo(),this._visibleTrash(),this._setEventListener(),this._element}},{key:"addLike",value:function(){this._cardLike.classList.add("card__like_active")}},{key:"deleteLike",value:function(){this._cardLike.classList.remove("card__like_active")}},{key:"countLikes",value:function(e){this._likes=e,this._element.querySelector(".card__like_el_count").textContent=this._likes.length}},{key:"_visibleTrash",value:function(){this._userId!==this._ownerId&&this._cardTrash.remove()}},{key:"_updateInfo",value:function(){var e=this;this._likesCounter.textContent=this._likes.length,this._likes.some((function(t){return t._id===e._userId}))&&this._cardLike.classList.add("card__like_active")}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListener",value:function(){var e=this;this._cardTrash.addEventListener("click",(function(){e._handleRemoveButtonClick(e)})),this._cardLike.addEventListener("click",(function(t){e._handleClickLikes(e._cardId)})),this._cardImg.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();const c=u;function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==l(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===l(o)?o:String(o)),n)}var o}var f=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=r}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}}])&&s(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();const p=f;function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,m(n.key),n)}}function m(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===y(t)?t:String(t)}const h=function(){function e(t){var r,n,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,o=function(e){"Escape"===e.key&&i.close()},(n=m(n="_closedPopUpEsc"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popup=document.querySelector(t),this._closedPopUpEsc=this._closedPopUpEsc.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("pop-up_active"),document.addEventListener("keydown",this._closedPopUpEsc)}},{key:"close",value:function(){this._popup.classList.remove("pop-up_active"),document.removeEventListener("keydown",this._closedPopUpEsc)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("pop-up_active")&&e.close(),t.target.classList.contains("pop-up__close")&&e.close()}))}}])&&d(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function _(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==v(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===v(o)?o:String(o)),n)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},b.apply(this,arguments)}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}const k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(n);if(o){var r=g(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._popUpImg=n._popup.querySelector(t),n._popUpTitleImg=n._popup.querySelector(r),n}return t=a,(r=[{key:"open",value:function(e,t){this._popUpTitleImg.textContent=e,this._popUpImg.src=t,this._popUpImg.alt=e,b(g(a.prototype),"open",this).call(this)}}])&&_(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(h);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},j.apply(this,arguments)}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(n);if(o){var r=P(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t,r,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(o=i.call(this,e))._formElement=o._popup.querySelector(t),o._callbackSubmitForm=n,o._input=r,o._inputList=o._formElement.querySelectorAll(o._input),o._btnFormSubmit=o._formElement.querySelector(".pop-up__button"),o}return t=a,(r=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"loadingButtonText",value:function(e){this._btnFormSubmit.textContent=e}},{key:"setEventListeners",value:function(){var e=this;j(P(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSubmitForm(e._getInputValues())}))}},{key:"close",value:function(){j(P(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(h);const C=L;function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}const q=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._info=document.querySelector(r),this._avatar=document.getElementById(n)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(e){return{name:this._name.textContent,info:this._info.textContent}}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatar.style.backgroundImage="url(".concat(t,")")}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.info,n=e.id;this._name.textContent=t,this._info.textContent=r,this._id=n}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function B(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}const x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.url=t.url,this.headers=t.headers}var t,r;return t=e,(r=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.url,"/cards"),{method:"GET",headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getServerUserInfo",value:function(){var e=this;return fetch("".concat(this.url,"/users/me"),{method:"GET",headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"editServerProfile",value:function(e){var t=this;return fetch("".concat(this.url,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.info})}).then((function(e){return t._getResponseData(e)}))}},{key:"addCardServer",value:function(e){var t=this;return fetch("".concat(this.url,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.place,link:e.link,likes:e.likes})}).then((function(e){return t._getResponseData(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this.url,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCardServer",value:function(e){var t=this;return fetch("".concat(this.url,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"addLikeServer",value:function(e){var t=this;return fetch("".concat(this.url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteLikeServer",value:function(e){var t=this;return fetch("".concat(this.url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},D.apply(this,arguments)}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}const N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=F(n);if(o){var r=F(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".form_place_delete-card"),t._btnDelete=t._popup.querySelector(".pop-up__button_place_delete-card"),t}return t=a,(r=[{key:"setSubmitAction",value:function(e){this._handleSubmitCallback=e}},{key:"setEventListeners",value:function(){var e=this;D(F(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitCallback()}))}}])&&U(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(h);var H=document.querySelector(".card-template").content.querySelector(".card"),J=document.querySelector(".cards"),M=(document.querySelectorAll(".pop-up"),document.querySelector(".pop-up_place_add-place")),G=document.querySelector(".profile__add-button"),z=(document.querySelector(".form"),".form__item"),$=M.querySelector(".form_place_add-place"),K=($.querySelector(".form__item_el_name"),$.querySelector(".form__item_el_link"),document.querySelector(".form_place_edit-profile")),Q=K.querySelector(".form__item_el_name"),W=K.querySelector(".form__item_el_info"),X=(document.querySelector(".pop-up_place_profile"),document.querySelector(".profile")),Y=(X.querySelector(".profile__name"),X.querySelector(".profile__info"),document.getElementById("avatar"),document.querySelector(".profile__avatar")),Z=X.querySelector(".profile__edit-button");function ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}document.querySelector(".pop-up_place_img");var te=new x({url:"https://mesto.nomoreparties.co/v1/cohort-63",headers:{authorization:"6e9922b1-82bb-44b1-8c4a-e1a93da7bd0f","Content-Type":"application/json"}}),re=null;Promise.all([te.getServerUserInfo(),te.getInitialCards()]).then((function(e){var t,r,n=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],c=!0,l=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,r)||function(e,t){if(e){if("string"==typeof e)return ee(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ee(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];re=o._id,ce.setUserInfo({info:o.about,name:o.name,id:o._id}),ce.setUserAvatar({avatar:o.avatar}),ie.renderItems(i.reverse())})).catch((function(e){console.log(e)}));var ne=function(e){var t=new c(e,re,H,{handleCardClick:function(e,t){se.open(e,t)}},{handleRemoveButtonClick:function(e){oe.open(),oe.setSubmitAction((function(){te.deleteCardServer(e._cardId).then((function(){e.deleteCard(),oe.close()})).catch((function(e){console.log(e)}))}))}},{handleClickLikes:function(){e.likes.some((function(e){return e._id===re}))?te.deleteLikeServer(e.cardId).then((function(r){t.deleteLike(),e.likes=r.likes,t.countLikes(r.likes)})).catch((function(e){console.log(e)})):te.addLikeServer(e.cardId).then((function(r){t.addLike(),e.likes=r.likes,t.countLikes(r.likes)})).catch((function(e){console.log(e)}))}});return t.generateCard()},oe=new N(".pop-up_place_delete-card");oe.setEventListeners();var ie=new p({renderer:function(e){var t=ne({name:e.name,link:e.link,likes:e.likes,cardId:e._id,ownerId:e.owner._id,userId:re});ie.addItem(t)}},J),ae=new C(".pop-up_place_add-place",".form_place_add-place",z,(function(e){ae.loadingButtonText("Создание..."),te.addCardServer(e).then((function(e){ie.addItem(ne({name:e.name,link:e.link,likes:e.likes,cardId:e._id,ownerId:e.owner._id,userId:re})),ae.close()})).catch((function(e){console.log(e)})).finally((function(){return ae.loadingButtonText("Создать")}))}));ae.setEventListeners();var ue=new C(".pop-up_place_profile",".form_place_edit-profile",z,(function(e){pe["edit-profile"].disableSubmitButton(),ue.loadingButtonText("Сохранение..."),te.editServerProfile(e).then((function(e){ce.setUserInfo({name:e.name,info:e.about}),ue.close()})).catch((function(e){console.log(e)})).finally((function(){return ue.loadingButtonText("Сохранить")}))}));ue.setEventListeners();var ce=new q(".profile__name",".profile__info","avatar"),le=new C(".pop-up_place_update-avatar",".form_place_update-avatar",z,(function(e){le.loadingButtonText("Сохранение..."),te.editAvatar(e).then((function(e){ce.setUserAvatar({avatar:e.avatar}),le.close()})).catch((function(e){console.log(e)})).finally((function(){return le.loadingButtonText("Сохранить")}))}));le.setEventListeners();var se=new k(".pop-up_place_img",".pop-up__img",".pop-up__title-img");se.setEventListeners(),Y.addEventListener("click",(function(){pe["update-avatar"].resetValidation(),le.open()})),Z.addEventListener("click",(function(){var e=ce.getUserInfo();Q.value=e.name,W.value=e.info,ue.open()})),G.addEventListener("click",(function(){pe["add-place"].resetValidation(),ae.open()}));var fe,pe={};fe={formSelector:".form",inputSelector:".form__item",submitButtonSelector:".pop-up__button",inactiveButtonClass:"pop-up__button_disabled",inputErrorClass:"form__item_invalid",errorClass:"form__item-error"},Array.from(document.querySelectorAll(fe.formSelector)).forEach((function(e){var t=new o(fe,e),r=e.getAttribute("name");pe[r]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,